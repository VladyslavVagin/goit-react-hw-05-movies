{"version":3,"file":"static/js/485.917ead1e.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/request-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListMovies = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px 8px;\n  padding: 0 0 20px 0;\n  margin: 0 auto;\n  width: 100%;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  font-size: 32px;\n  font-weight: 700;\n  margin: 0 auto;\n  width: 312px;\n  overflow: hidden;\n`;\n\nexport const TitleMovie = styled.p`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0;\n  padding: 0;\n  background-color: inherit;\n`;\n\nexport const ImageM = styled.img`\n  width: 300px;\n  border: 2px solid orange;\n  box-shadow: rgba(255, 255, 255, 0.3) 0px 1px 2px 0px, rgba(255, 255, 255, 0.15) 0px 2px 6px 2px;\n`\nexport const MainTitle = styled.h1`\n  text-align: center;\n  background-color: black;\n  animation: pulse 2000ms infinite;\n  @keyframes pulse {\n  0% {\n    color:  #ff9900;\n  }\n  25% {\n    color:  #ff8b8b;\n  }\n  50% {\n    color:  #4c00ff;\n  }\n  75% {\n    color: #48ff00;\n  }\n  100% {\n  color: #00fff2;\n  }\n}  \n`","import { useEffect, useState } from 'react';\nimport { getMoviesPopular } from 'services/request-api';\nimport { ListMovies, ListItem, TitleMovie, ImageM, MainTitle } from './Home.styled';\nimport { NavLink } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport styled from 'styled-components';\nimport { base_url_image } from 'services/request-api';\n\nconst StyledLinkNav = styled(NavLink)`\n  text-decoration: none;\n  color: #222020;\n`\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    const popularMoviesShow = async () => {\n      setIsLoading(true);\n      try {\n        const response = await getMoviesPopular();\n        setPopularMovies([...response.data.results]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    popularMoviesShow();\n  }, []);\n\n  return (\n    <div>\n      <MainTitle> DAILY TOP-20</MainTitle>\n      {isLoading && <Loader/>}\n      {!isLoading && <ListMovies>\n        {popularMovies.map(movie => {\n          return (\n            <ListItem key={movie.id}>\n              <StyledLinkNav to={`movies/${movie.id}`}>\n                <ImageM\n                  src={base_url_image + movie.poster_path}\n                  alt={movie.name || movie.title}\n                  width={308}\n                />\n                <TitleMovie>{movie.title || movie.name}</TitleMovie>\n              </StyledLinkNav>\n            </ListItem>\n          );\n        })}\n      </ListMovies>}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '8c011024daf9ab6b31dbbb1d29e7525a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const base_url_image = 'https://image.tmdb.org/t/p/w500/';\n\n export async function getMoviesPopular() {\n  const response = await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieSearch(query, page) {\n  const response = await axios(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}&api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getMovieDetails(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getActors(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getMovieReviews(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["ListMovies","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","TitleMovie","_templateObject3","ImageM","_templateObject4","MainTitle","_templateObject5","StyledLinkNav","NavLink","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","popularMovies","setPopularMovies","useEffect","popularMoviesShow","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getMoviesPopular","sent","_toConsumableArray","data","results","t0","console","log","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","movie","to","concat","id","src","base_url_image","poster_path","alt","name","title","width","API_KEY","BASE_URL","_getMoviesPopular","axios","abrupt","getMovieSearch","_x","_x2","_getMovieSearch","_callee2","query","page","_context2","getMovieDetails","_x3","_getMovieDetails","_callee3","movieId","_context3","getActors","_x4","_getActors","_callee4","_context4","getMovieReviews","_x5","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}