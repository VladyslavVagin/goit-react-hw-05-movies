{"version":3,"file":"static/js/945.7c309d20.chunk.js","mappings":"0RAEaA,EAAQC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2MAOlBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gQAapBG,EAAYL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8GAQrBK,EAAUP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4B,+DCvB3BO,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAeC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2TAgB5BS,GAAaX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0KA4E/B,EAjEqB,WAAO,IAADW,EAAAC,EACzBC,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACtBI,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAA2B,QAArBb,EAAe,QAAfC,EAACS,EAASI,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,YAAI,IAAAf,EAAAA,EAAI,MAEnDgB,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CAGA,IAAMS,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,IAAgBnB,GAAS,KAAD,EAAzCc,EAAQE,EAAAI,KACRL,EAAOD,EAASC,KACtBhB,EAAa,CACXsB,OAAQN,EAAKO,YACbC,MAAOR,EAAKQ,MACZC,UAAWT,EAAKU,aAChBC,SAAUX,EAAKW,SACfC,OAAQZ,EAAKY,OACbC,KAAMb,EAAKc,eACVb,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAEHe,QAAQC,IAAGhB,EAAAc,IAAQ,yBAAAd,EAAAiB,OAAA,GAAApB,EAAA,kBAEtB,kBAfgB,OAAAH,EAAAwB,MAAA,KAAAC,UAAA,KAgBjB1B,GAjBA,CAkBF,GAAG,CAACT,IAEJ,IAAQqB,EAAqDvB,EAArDuB,OAAQE,EAA6CzB,EAA7CyB,MAAOC,EAAsC1B,EAAtC0B,UAAWE,EAA2B5B,EAA3B4B,SAAUC,EAAiB7B,EAAjB6B,OAAQC,EAAS9B,EAAT8B,KAGpD,OACEQ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACpD,EAAO,CAAAmD,UACRC,EAAAA,EAAAA,KAAChD,EAAU,CAACiD,GAAInC,EAAYoC,QAAQH,SAAC,gBAErCD,EAAAA,EAAAA,MAACtD,EAAO,CAAAuD,SAAA,EACNC,EAAAA,EAAAA,KAAC5D,EAAK,CACJ+D,IAAKpB,EATU,mCASgBA,EAASqB,EACxCC,IAAG,oBAAAC,OAAsBrB,MAE3Ba,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAKd,EAAM,OAAOK,EAAI,IAAAgB,OAAOhB,EAAKiB,MAAM,EAAG,GAAE,KAAM,OACnDP,EAAAA,EAAAA,KAAA,KAAAD,SAAA,eAAAO,QAAgC,GAAZpB,GAAgBsB,QAAQ,GAAE,QAC9CR,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIX,GAAY,qCAChBY,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,GAAUA,EAAOoB,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAI,IAAEC,KAAK,gBAGjDd,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJD,EAAAA,EAAAA,MAACpD,EAAS,CAAAqD,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAClD,EAAU,CAACmD,GAAI,OAAOF,SAAC,YAC5BC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAClD,EAAU,CAACmD,GAAI,UAAUF,SAAC,kBAEjCC,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,CAACC,UAAUd,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAAiBA,UAC1CC,EAAAA,EAAAA,KAACe,EAAAA,GAAM,WAKf,C,6LC/FMC,EAAU,mCACVC,EAAW,+BAET,SAAeC,IAAgB,OAAAC,EAAAvB,MAAC,KAADC,UAAA,CAKtC,SAAAsB,IAAA,OAAAA,GAAA9C,EAAAA,EAAAA,GAAAC,IAAAA,MALO,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACiBwC,EAAAA,EAAAA,GAAM,GAADd,OACvBW,EAAQ,gCAAAX,OAA+BU,IAC1C,KAAD,EAFa,OAARxC,EAAQE,EAAAI,KAAAJ,EAAA2C,OAAA,SAGP7C,GAAQ,wBAAAE,EAAAiB,OAAA,GAAApB,EAAA,MAChBqB,MAAA,KAAAC,UAAA,CAEM,SAAeyB,EAAcC,GAAA,OAAAC,EAAA5B,MAAC,KAADC,UAAA,CAKnC,SAAA2B,IAAA,OAAAA,GAAAnD,EAAAA,EAAAA,GAAAC,IAAAA,MALM,SAAAmD,EAA8BC,GAAK,IAAAlD,EAAA,OAAAF,IAAAA,MAAA,SAAAqD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,GACjBwC,EAAAA,EAAAA,GAAM,GAADd,OACvBW,EAAQ,wBAAAX,OAAuBoB,EAAK,aAAApB,OAAYU,IACnD,KAAD,EAFa,OAARxC,EAAQmD,EAAA7C,KAAA6C,EAAAN,OAAA,SAGP7C,GAAQ,wBAAAmD,EAAAhC,OAAA,GAAA8B,EAAA,MAChB7B,MAAA,KAAAC,UAAA,CAEO,SAAehB,EAAe+C,GAAA,OAAAC,EAAAjC,MAAC,KAADC,UAAA,CAKrC,SAAAgC,IAAA,OAAAA,GAAAxD,EAAAA,EAAAA,GAAAC,IAAAA,MALO,SAAAwD,EAA+BpE,GAAO,IAAAc,EAAA,OAAAF,IAAAA,MAAA,SAAAyD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,GACrBwC,EAAAA,EAAAA,GAAM,GAADd,OACvBW,EAAQ,WAAAX,OAAU5C,EAAO,aAAA4C,OAAYU,IACxC,KAAD,EAFa,OAARxC,EAAQuD,EAAAjD,KAAAiD,EAAAV,OAAA,SAGP7C,GAAQ,wBAAAuD,EAAApC,OAAA,GAAAmC,EAAA,MAChBlC,MAAA,KAAAC,UAAA,CAEO,SAAemC,EAASC,GAAA,OAAAC,EAAAtC,MAAC,KAADC,UAAA,CAK/B,SAAAqC,IAAA,OAAAA,GAAA7D,EAAAA,EAAAA,GAAAC,IAAAA,MALO,SAAA6D,EAAyBzE,GAAO,IAAAc,EAAA,OAAAF,IAAAA,MAAA,SAAA8D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAxD,KAAA,GACfwC,EAAAA,EAAAA,GAAM,GAADd,OACvBW,EAAQ,WAAAX,OAAU5C,EAAO,qBAAA4C,OAAoBU,IAChD,KAAD,EAFa,OAARxC,EAAQ4D,EAAAtD,KAAAsD,EAAAf,OAAA,SAGP7C,GAAQ,wBAAA4D,EAAAzC,OAAA,GAAAwC,EAAA,MAChBvC,MAAA,KAAAC,UAAA,CAEO,SAAewC,EAAeC,GAAA,OAAAC,EAAA3C,MAAC,KAADC,UAAA,CAKrC,SAAA0C,IAAA,OAAAA,GAAAlE,EAAAA,EAAAA,GAAAC,IAAAA,MALO,SAAAkE,EAA+B9E,GAAO,IAAAc,EAAA,OAAAF,IAAAA,MAAA,SAAAmE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,GACrBwC,EAAAA,EAAAA,GAAM,GAADd,OACvBW,EAAQ,WAAAX,OAAU5C,EAAO,qBAAA4C,OAAoBU,IAChD,KAAD,EAFa,OAARxC,EAAQiE,EAAA3D,KAAA2D,EAAApB,OAAA,SAGP7C,GAAQ,wBAAAiE,EAAA9C,OAAA,GAAA6C,EAAA,MAChB5C,MAAA,KAAAC,UAAA,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","services/request-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Image = styled.img`\n  max-width: 300px;\n  border-radius: 20px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 28px 0px,\n    rgba(0, 0, 0, 0.1) 0px 2px 4px 0px,\n    rgba(255, 255, 255, 0.05) 0px 0px 0px 1px inset;\n`;\nexport const Content = styled.div`\n  display: flex;\n  align-items: flex-start;\n  column-gap: 16px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid gray;\n  @media screen and (max-width: 680px) {\n    flex-direction: column;\n    max-width: 300px;\n    margin: 0 auto;\n  }\n`;\n\nexport const ListLinks = styled.ul`\n  list-style-type: none;\n  display: flex;\n  column-gap: 20px;\n  padding: 0;\n  font-size: 20px;\n`\n\nexport const BackBox = styled.div`\n  padding: 20px;\n`\n","import React, { useEffect, useRef, useState, Suspense } from 'react';\nimport styled from 'styled-components';\nimport { useLocation, useParams, NavLink, Link, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'services/request-api';\nimport { Content, Image, ListLinks, BackBox } from './MovieDetails.styled';\nimport picture from '../../images/noimage.jpg'\n\nconst StyledLink = styled(NavLink)`\n  display: inline-flex;\n  padding: 8px 20px;\n  color: #000000;\n  text-decoration: none;\n  text-transform: uppercase;\n  border: 1px solid black;\n  border-radius: 20px;\n  transition: all 400ms ease;\n  &.active {\n    color: #e0921c;\n    transform: scale(1.2);\n    border: 1px solid #e0921c;\n  }\n`;\n\nconst LinkStyled = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 24px;\n  transition: all 400ms ease;\n  &:hover {\n    color: orange;\n    transform: scale(1.2);\n  }\n`\n\nconst MovieDetails = () => {\n  const [dataMovie, setDataMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const showDetails = async () => {\n      try {\n        const response = await getMovieDetails(movieId);\n        const data = response.data;\n        setDataMovie({\n          poster: data.poster_path,\n          title: data.title,\n          userScore: data.vote_average,\n          overview: data.overview,\n          genres: data.genres,\n          year: data.release_date,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    showDetails();\n  }, [movieId]);\n\n  const { poster, title, userScore, overview, genres, year } = dataMovie;\n  const base_url_image = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <div>\n      <BackBox>\n      <LinkStyled to={backLinkRef.current}>&lt;&lt;&lt; Back</LinkStyled>\n      </BackBox>\n      <Content>\n        <Image\n          src={poster ? base_url_image + poster : picture}\n          alt={`Poster for movie ${title}`}\n        />\n        <div>\n          <h2>{title}&nbsp;{year ? `(${year.slice(0, 4)})` : ''}</h2>\n          <p>{`User score: ${(userScore * 10).toFixed(0)}%`}</p>\n          <h3>Overview</h3>\n          <p>{overview || 'Description will be added later'}</p>\n          <h3>Genres</h3>\n          <p>{genres && genres.map(el => el.name).join(' / ')}</p>\n        </div>\n      </Content>\n      <div>\n        <h4>Additional information</h4>\n        <ListLinks>\n          <li><StyledLink to={'cast'}>Cast</StyledLink></li>\n          <li><StyledLink to={'reviews'}>Reviews</StyledLink></li>\n        </ListLinks>\n        <Suspense fallback={<div>Loading...</div>}>\n        <Outlet/>\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '8c011024daf9ab6b31dbbb1d29e7525a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n export async function getMoviesPopular() {\n  const response = await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieSearch(query) {\n  const response = await axios(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getMovieDetails(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getActors(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getMovieReviews(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["Image","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","ListLinks","_templateObject3","BackBox","_templateObject4","StyledLink","NavLink","LinkStyled","Link","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","dataMovie","setDataMovie","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","showDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","getMovieDetails","sent","poster","poster_path","title","userScore","vote_average","overview","genres","year","release_date","t0","console","log","stop","apply","arguments","_jsxs","children","_jsx","to","current","src","picture","alt","concat","slice","toFixed","map","el","name","join","Suspense","fallback","Outlet","API_KEY","BASE_URL","getMoviesPopular","_getMoviesPopular","axios","abrupt","getMovieSearch","_x","_getMovieSearch","_callee2","query","_context2","_x2","_getMovieDetails","_callee3","_context3","getActors","_x3","_getActors","_callee4","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}