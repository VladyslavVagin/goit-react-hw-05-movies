{"version":3,"file":"static/js/945.782a4306.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","services/request-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Image = styled.img`\n  max-width: 300px;\n  border-radius: 20px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 28px 0px,\n    rgba(0, 0, 0, 0.1) 0px 2px 4px 0px,\n    rgba(255, 255, 255, 0.05) 0px 0px 0px 1px inset;\n`;\nexport const Content = styled.div`\n  display: flex;\n  align-items: flex-start;\n  column-gap: 16px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid gray;\n  @media screen and (max-width: 680px) {\n    flex-direction: column;\n    max-width: 300px;\n    margin: 0 auto;\n  }\n`;\n\nexport const ListLinks = styled.ul`\n  list-style-type: none;\n  display: flex;\n  column-gap: 20px;\n  padding: 0;\n  font-size: 20px;\n`\n\nexport const BackBox = styled.div`\n  padding: 20px;\n`\n","import { useEffect, useRef, useState, Suspense } from 'react';\nimport styled from 'styled-components';\nimport {\n  useLocation,\n  useParams,\n  NavLink,\n  Link,\n  Outlet,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'services/request-api';\nimport { Content, Image, ListLinks, BackBox } from './MovieDetails.styled';\nimport picture from '../../images/noimage.jpg';\nimport Loader from 'components/Loader/Loader';\n\nconst StyledLink = styled(NavLink)`\n  display: inline-flex;\n  padding: 8px 20px;\n  color: #000000;\n  text-decoration: none;\n  text-transform: uppercase;\n  border: 1px solid black;\n  border-radius: 20px;\n  transition: all 400ms ease;\n  &.active {\n    color: #e0921c;\n    transform: scale(1.2);\n    border: 1px solid #e0921c;\n  }\n`;\n\nconst LinkStyled = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 24px;\n  transition: all 400ms ease;\n  &:hover {\n    color: orange;\n    transform: scale(1.2);\n  }\n`;\n\nconst MovieDetails = () => {\n  const [dataMovie, setDataMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const showDetails = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieDetails(movieId);\n        const data = response.data;\n        setDataMovie({\n          poster: data.poster_path,\n          title: data.title,\n          userScore: data.vote_average,\n          overview: data.overview,\n          genres: data.genres,\n          year: data.release_date,\n        });\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    showDetails();\n  }, [movieId]);\n\n  const { poster, title, userScore, overview, genres, year } = dataMovie;\n  const base_url_image = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <>\n          <BackBox>\n            <LinkStyled to={backLinkRef.current}>&lt;&lt;&lt; Back</LinkStyled>\n          </BackBox>\n          <Content>\n            <Image\n              src={poster ? base_url_image + poster : picture}\n              alt={`Poster for movie ${title}`}\n            />\n            <div>\n              <h2>\n                {title}&nbsp;{year ? `(${year.slice(0, 4)})` : ''}\n              </h2>\n              <p>{`User score: ${(userScore * 10).toFixed(0)}%`}</p>\n              <h3>Overview</h3>\n              <p>{overview || 'Description will be added later'}</p>\n              <h3>Genres</h3>\n              <p>{genres && genres.map(el => el.name).join(' / ')}</p>\n            </div>\n          </Content>\n          <div>\n            <h4>Additional information</h4>\n            <ListLinks>\n              <li>\n                <StyledLink to={'cast'}>Cast</StyledLink>\n              </li>\n              <li>\n                <StyledLink to={'reviews'}>Reviews</StyledLink>\n              </li>\n            </ListLinks>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '8c011024daf9ab6b31dbbb1d29e7525a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n export async function getMoviesPopular() {\n  const response = await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieSearch(query, page) {\n  const response = await axios(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}&api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getMovieDetails(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getActors(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getMovieReviews(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["Image","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","ListLinks","_templateObject3","BackBox","_templateObject4","StyledLink","NavLink","LinkStyled","Link","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","dataMovie","setDataMovie","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","showDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","getMovieDetails","sent","poster","poster_path","title","userScore","vote_average","overview","genres","year","release_date","t0","console","log","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","_Fragment","to","current","src","picture","alt","concat","slice","toFixed","map","el","name","join","Suspense","fallback","Outlet","API_KEY","BASE_URL","getMoviesPopular","_getMoviesPopular","axios","abrupt","getMovieSearch","_x","_x2","_getMovieSearch","_callee2","query","page","_context2","_x3","_getMovieDetails","_callee3","_context3","getActors","_x4","_getActors","_callee4","_context4","getMovieReviews","_x5","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}