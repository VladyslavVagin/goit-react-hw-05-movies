{"version":3,"file":"static/js/538.1b3a3a2d.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/request-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListActors = styled.ul`\n  width: 100%;\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  gap: 20px 8px;\n  padding: 0;\n`;\n\nexport const Actor = styled.li`\n  max-width: 200px;\n  margin: 0 auto;\n  height: 400px;\n`;\n\nexport const AvatarActor = styled.img`\n  width: 200px;\n`;\n\nexport const ActorName = styled.p`\n    font-size: 20px;\n    font-weight: 700;\n    margin: 0;\n`\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getActors } from 'services/request-api';\nimport avatarAct from '../../images/avatar.jpg';\nimport { ListActors, Actor, AvatarActor, ActorName } from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [castLoading, setCastLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const showActors = async () => {\n      try {\n        setCastLoading(true);\n        const response = await getActors(movieId);\n        const actorsData = response.data.cast;\n        if (actorsData.length !== 0) {\n          setActors(actorsData);\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setCastLoading(false);\n      }\n    };\n\n    showActors();\n  }, [movieId]);\n\n  const base_url_image = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <div>\n      {castLoading && <Loader/>}\n      {!castLoading &&  <ListActors>\n      {actors.length > 0 ?\n        actors.map(({profile_path, name, character, id}) => (\n          <Actor key={id}>\n            <AvatarActor src={profile_path ? base_url_image + profile_path : avatarAct} alt={name} />\n            <ActorName>{name || 'unknown'}</ActorName>\n            <p> <strong>Character:</strong> <em>{character || 'unknown'}</em></p>\n          </Actor>\n        )) : <p><strong>No information about actors</strong></p>}\n    </ListActors>}\n   </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '8c011024daf9ab6b31dbbb1d29e7525a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n export async function getMoviesPopular() {\n  const response = await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieSearch(query, page) {\n  const response = await axios(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}&api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getMovieDetails(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getActors(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\n export async function getMovieReviews(movieId) {\n  const response = await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["ListActors","styled","_templateObject","_taggedTemplateLiteral","Actor","_templateObject2","AvatarActor","_templateObject3","ActorName","_templateObject4","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","castLoading","setCastLoading","movieId","useParams","useEffect","showActors","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","actorsData","_context","prev","next","getActors","sent","data","cast","length","t0","console","log","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","_ref2","profile_path","name","character","id","src","alt","API_KEY","BASE_URL","getMoviesPopular","_getMoviesPopular","axios","concat","abrupt","getMovieSearch","_x","_x2","_getMovieSearch","_callee2","query","page","_context2","getMovieDetails","_x3","_getMovieDetails","_callee3","_context3","_x4","_getActors","_callee4","_context4","getMovieReviews","_x5","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}